{"version":3,"sources":["logo.svg","containers/Homepage/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["options","scales","xAxes","display","scaleLabel","labelString","yAxes","ticks","beginAtZero","title","text","textUrls","url","Homepage","useState","datasets","setData","label","setLabel","setURL","loading","setLoading","updateDataSet","name","data","red","Math","random","blue","green","newSet","fill","backgroundColor","borderColor","oldDatasets","className","width","TextField","placeholder","id","variant","value","style","required","onChange","event","target","Autocomplete","clearOnBlur","handleHomeEndKeys","renderOption","getOptionLabel","textUrl","newValue","freeSolo","onInputChange","newInputValue","renderInput","params","Button","color","onClick","u","l","axios","post","then","res","console","log","success","Object","values","frequency","catch","error","sendRequest","labels","Array","keys","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11e07d9e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { TextField, Button } from '@material-ui/core';\nimport axios from 'axios';\nimport './Homepage.css';\nimport { Puff } from '@agney/react-loading';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst options = {\n  scales: {\n    xAxes: [\n      {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Number of words in sentence',\n        },\n      },\n    ],\n    yAxes: [\n      {\n        scaleLabel: {\n          display: true,\n          labelString: 'Number of sentences',\n        },\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n  title: {\n    display: true,\n    text: 'Ditribution of number of words in each sentence.',\n  },\n};\nconst textUrls = [\n  {\n    title: 'Frankenstein by Mary Wollstonecraft Shelley',\n    url: 'http://www.gutenberg.org/files/84/84-0.txt',\n  },\n  {\n    title: 'Pride and Prejudice by Jane Austen',\n    url: 'http://www.gutenberg.org/files/1342/1342-0.txt',\n  },\n  {\n    title: \"Alice's Adventures in Wonderland by Lewis Carroll\",\n    url: 'http://www.gutenberg.org/files/11/11-0.txt',\n  },\n  {\n    title: 'Moby Dick by Herman Melville',\n    url: 'http://www.gutenberg.org/files/2701/2701-0.txt',\n  },\n  {\n    title: 'Dracula by Bram Stoker',\n    url: 'http://www.gutenberg.org/cache/epub/345/pg345.txt',\n  },\n  {\n    title: 'Peter Pan by James M. Barrie',\n    url: 'http://www.gutenberg.org/files/16/16-0.txt',\n  },\n  {\n    title: 'The Republic by Plato',\n    url: 'http://www.gutenberg.org/cache/epub/1497/pg1497.txt',\n  },\n];\nfunction Homepage() {\n  const [datasets, setData] = useState([]);\n  const [label, setLabel] = useState('');\n  const [url, setURL] = useState('');\n  const [loading, setLoading] = useState(false);\n  const sendRequest = () => {\n    setLoading(true);\n    const u = url;\n    setURL('');\n    const l = label;\n    setLabel('');\n    axios\n      .post(\n        `https://us-central1-rishabh-gajra.cloudfunctions.net/cached_data`,\n        {\n          url: u,\n        }\n      )\n      .then((res) => {\n        console.log(res.data);\n        if (res.data.success == true) {\n          console.log(res.data);\n          updateDataSet(l, Object.values(res.data.frequency));\n          setLoading(false);\n        } else {\n          axios\n            .post(\n              `https://us-central1-rishabh-gajra.cloudfunctions.net/sentence_length`,\n              {\n                url: u,\n              }\n            )\n            .then((res) => {\n              console.log(res.data.frequency);\n              updateDataSet(l, Object.values(res.data.frequency));\n              setLoading(false);\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const autoFunction = (textUrl) => {\n    // setLabel(textUrl.title);\n    // setURL(textUrl.url);\n\n    return !!textUrl.title ? textUrl.title : textUrl;\n  };\n  const updateDataSet = (name, data) => {\n    const red = Math.random() * 255;\n    const blue = Math.random() * 255;\n    const green = Math.random() * 255;\n    const newSet = {\n      label: name,\n      data: data,\n      fill: false,\n      backgroundColor: `rgb(${red}, ${blue}, ${green})`,\n      borderColor: `rgba(${red}, ${blue}, ${green}, 0.2)`,\n    };\n    const oldDatasets = datasets;\n    setData([...oldDatasets, newSet]);\n  };\n\n  return (\n    <div className=\"body-container\">\n      <div>\n        {loading && (\n          <div className=\"loading\">\n            <Puff width=\"100\" />\n          </div>\n        )}\n        <div className=\"title\">\n          The App parses the plain text from the urls and draws a histogram of\n          the sentence length distribution.\n        </div>\n        <div>Enter a book name and url with text (press enter after pasting a url or else it will get cleared)</div>\n        <br />\n        <div className=\"header\">\n          <TextField\n            placeholder=\"Book name here\"\n            id=\"outlined-basic\"\n            label=\"Book name\"\n            variant=\"outlined\"\n            value={label}\n            style={{ width: 500 }}\n            required={true}\n            onChange={(event) => {\n              setLabel(event.target.value);\n            }}\n          />\n          <Autocomplete\n            // selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            options={textUrls}\n            style={{ width: 500 }}\n            renderOption={(textUrls) =>\n              !!textUrls.title ? textUrls.title : textUrls\n            }\n            getOptionLabel={autoFunction}\n            onChange={(event, newValue) => {\n              // console.log(event, newValue);\n              setURL(newValue);\n              // setLabel(newValue);\n            }}\n            freeSolo={true}\n            onInputChange={(event, newInputValue) => {\n              setURL(newInputValue.url);\n              setLabel(newInputValue.title);\n            }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                placeholder=\"http://www.gutenberg.org/files/1342/1342-0.txt\"\n                id=\"outlined-basic\"\n                label=\"Url\"\n                required={true}\n                variant=\"outlined\"\n                style={{ width: 500 }}\n                value={url}\n                // onChange={(event) => {\n                //   setURL(event.target.value);\n                // }}\n              />\n            )}\n          />\n\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() => {\n              sendRequest();\n            }}\n          >\n            Analyse\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() => {\n              setURL('');\n              setLabel('');\n              setData([]);\n            }}\n          >\n            Reset\n          </Button>\n        </div>\n      </div>\n      <div className=\"chart\">\n        <Line\n          data={{\n            labels: [...Array(60).keys()],\n            datasets: datasets,\n          }}\n          options={options}\n        />\n      </div>\n      <div>\n        The app caches results for previous books so try comparing the loading\n        times for a new url vs same url twice, the repeats should be\n        significantly faster.\n      </div>\n    </div>\n  );\n}\n\nexport default Homepage;\n","import logo from './logo.svg';\nimport './App.css';\nimport Homepage from './containers/Homepage/Homepage';\n\nfunction App() {\n  return (\n    <div>\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}